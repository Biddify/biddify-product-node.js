name: Build, SonarCloud & Docker

on:
  pull_request:
    branches: [ master ]

  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest
    env:
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_DATABASE: ${{ secrets.DB_DATABASE }}
      DB_PORT: ${{ secrets.DB_PORT }}
      DB_DIALECT: mysql
      PORT: ${{ secrets.PORT }}
      DB_DIALECT_TEST: ${{ secrets.DB_DIALECT_TEST }}
      
    strategy:
      fail-fast: false
      matrix:
        node-version: [14.x]
  
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install
      - run: npm run build --if-present
      - run: npm test

  sonarcloud:
    runs-on: ubuntu-latest
    env:
      DB_DIALECT_TEST: ${{ secrets.DB_DIALECT_TEST }}
      
    steps:
      - name: Check Out Repo
        uses: actions/checkout@v2

      - name: Install dependencies
        run: npm install

      - name: Run Tests
        run: npm run test

      - name: SonarCloud Scan
        uses: sonarsource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          
  docker:
    needs: [sonarcloud]
    runs-on: ubuntu-latest
    steps:
      - name: Check Out Repo 
        uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./Dockerfile
          push: true
          tags: robfontys/biddify-product-node.js:latest

      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
